# Generated by Django 2.1.2 on 2019-02-24 11:16

import django.contrib.postgres.fields.citext
import django.contrib.postgres.operations
from django.db import migrations, models
import django.utils.timezone
import milife_back.users.models
import uuid
import uuid_upload_path.storage
import versatileimagefield.fields


class Migration(migrations.Migration):

    replaces = [('users', '0001_initial'), ('users', '0002_auto_20171024_1200'), ('users', '0003_user_number'), ('users', '0004_user_email_verified'), ('users', '0005_auto_20181129_1741'), ('users', '0006_auto_20181219_1227'), ('users', '0007_auto_20181219_1249'), ('users', '0008_auto_20181219_1252'), ('users', '0009_auto_20181219_1252'), ('users', '0010_auto_20181219_1252'), ('users', '0011_auto_20181227_2048'), ('users', '0012_auto_20181227_2203'), ('users', '0013_auto_20181229_1811'), ('users', '0014_auto_20181231_0814'), ('users', '0015_auto_20190108_1839'), ('users', '0016_auto_20190206_0418'), ('users', '0017_auto_20190206_1544'), ('users', '0018_auto_20190206_1853'), ('users', '0019_auto_20190218_0806'), ('users', '0020_auto_20190222_0640'), ('users', '0021_auto_20190222_0640'), ('users', '0022_auto_20190222_0641'), ('users', '0023_auto_20190224_1012'), ('users', '0024_auto_20190224_1043')]

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=120, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=120, verbose_name='Last Name')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'ordering': ('-date_joined',),
            },
            managers=[
                ('objects', milife_back.users.models.UserManager()),
            ],
        ),
        django.contrib.postgres.operations.CITextExtension(
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=django.contrib.postgres.fields.citext.CIEmailField(db_index=True, max_length=254, unique=True, verbose_name='email address'),
        ),
        migrations.AddField(
            model_name='user',
            name='number',
            field=models.CharField(blank=True, max_length=120, verbose_name='Number'),
        ),
        migrations.AddField(
            model_name='user',
            name='email_verified',
            field=models.BooleanField(default=False, verbose_name='email verified'),
        ),
        migrations.AddField(
            model_name='user',
            name='date_of_birth',
            field=models.DateField(null=True, verbose_name='Date Of Birth'),
        ),
        migrations.AddField(
            model_name='user',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('N', 'I would rather not say')], max_length=4, verbose_name='Gender'),
        ),
        migrations.AddField(
            model_name='user',
            name='height_cm',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Height'),
        ),
        migrations.AddField(
            model_name='user',
            name='height_unit',
            field=models.CharField(blank=True, choices=[('imperial', 'imperial'), ('metric', 'metric')], max_length=10, verbose_name='Height unit preference'),
        ),
        migrations.AddField(
            model_name='user',
            name='weight_kg',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Weight'),
        ),
        migrations.AddField(
            model_name='user',
            name='weight_unit',
            field=models.CharField(blank=True, choices=[('st', 'stones'), ('lb', 'pounds'), ('kg', 'kilogram')], max_length=10, verbose_name='Weight unit preference'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into the admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='user',
            name='accuniq_id',
            field=models.CharField(default='blah', max_length=100, verbose_name='Accuniq Id'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='image',
            field=versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=uuid_upload_path.storage.upload_to, verbose_name='image'),
        ),
        migrations.AddField(
            model_name='user',
            name='image_poi',
            field=versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name="image's Point of Interest"),
        ),
    ]
